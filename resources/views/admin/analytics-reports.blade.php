@extends('layouts.app')

@section('content')
<main class="main-content">
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h1 class="text-2xl font-bold text-gray-900">Machine Learning Insights</h1>
        <p class="text-gray-600">These analytics are generated by advanced machine learning models using your business data.</p>
    </div>
    <!-- Demand Forecasting Chart -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-6">Demand Forecasting</h2>
        <div class="relative" style="height: 300px;">
            <canvas id="demandForecastChart"></canvas>
        </div>
    </div>
    <!-- Sales Prediction (Next 30 Days) -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Sales Prediction (Next 30 Days)</h3>
        <div id="salesPrediction" class="space-y-4"></div>
        <div class="mt-4 p-3 bg-gray-50 rounded-lg">
            <p class="text-sm text-gray-600">Confidence Level: <span id="salesConfidence" class="font-semibold text-gray-900">-</span></p>
        </div>
    </div>
    <!-- Inventory Optimization -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Inventory Optimization</h3>
        <div id="inventoryOptimization" class="space-y-4"></div>
    </div>
    <!-- Risk Assessment -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Risk Assessment</h3>
        <div id="riskAssessment" class="space-y-4"></div>
    </div>
    <!-- Customer Segmentation (if ML-driven) -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Customer Segmentation</h3>
        <div class="relative" style="height: 300px;">
            <canvas id="customerSegmentationChart"></canvas>
        </div>
    </div>
</main>

<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    let demandForecastChart, customerSegmentationChart;

    // Initialize charts when page loads
    document.addEventListener('DOMContentLoaded', function() {
        initializeCharts();
        loadAnalyticsData();
        
        // Auto-refresh every 5 minutes
        setInterval(function() {
            loadAnalyticsData();
        }, 300000);
    });

    function initializeCharts() {
        // Demand Forecasting Chart
        const demandCtx = document.getElementById('demandForecastChart').getContext('2d');
        demandForecastChart = new Chart(demandCtx, {
            type: 'line',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                    label: 'Actual Demand',
                    data: [], // Will be filled by API
                    borderColor: 'rgb(59, 130, 246)',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    tension: 0.4
                }, {
                    label: 'Predicted Demand',
                    data: [], // Will be filled by API
                    borderColor: 'rgb(34, 197, 94)',
                    backgroundColor: 'rgba(34, 197, 94, 0.1)',
                    borderDash: [5, 5],
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Demand (Units)'
                        }
                    }
                }
            }
        });

        // Customer Segmentation Chart
        const segmentationCtx = document.getElementById('customerSegmentationChart').getContext('2d');
        customerSegmentationChart = new Chart(segmentationCtx, {
            type: 'doughnut',
            data: {
                labels: ['Premium Buyers', 'Regular Consumers', 'Occasional Buyers'],
                datasets: [{
                    data: [], // Will be filled by API
                    backgroundColor: [
                        'rgba(59, 130, 246, 0.8)',
                        'rgba(34, 197, 94, 0.8)',
                        'rgba(245, 158, 11, 0.8)'
                    ],
                    borderColor: [
                        'rgba(59, 130, 246, 1)',
                        'rgba(34, 197, 94, 1)',
                        'rgba(245, 158, 11, 1)'
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                    }
                }
            }
        });
    }

    function loadAnalyticsData() {
        // Load ML predictions
        fetch('/api/analytics/predictions')
            .then(response => response.json())
            .then(data => {
                // Update demand forecast chart
                demandForecastChart.data.datasets[1].data = data.demand_forecast || [];
                demandForecastChart.update();

                // Update sales prediction section
                const salesPrediction = document.getElementById('salesPrediction');
                salesPrediction.innerHTML = '';
                if (data.sales_predictions && data.sales_predictions.length > 0) {
                    data.sales_predictions.forEach(pred => {
                        const div = document.createElement('div');
                        div.className = 'flex justify-between items-center p-3 bg-green-50 rounded-lg';
                        div.innerHTML = `<span class="text-sm font-medium text-green-800">${pred.product_name}</span><span class="text-lg font-bold text-green-900">${pred.predicted_sales} units</span>`;
                        salesPrediction.appendChild(div);
                    });
                    document.getElementById('salesConfidence').textContent = (data.confidence_level ? data.confidence_level + '%' : '-');
                } else {
                    salesPrediction.innerHTML = '<span class="text-gray-500">No sales prediction data available.</span>';
                    document.getElementById('salesConfidence').textContent = '-';
                }
            })
            .catch(error => {
                demandForecastChart.data.datasets[1].data = [];
                demandForecastChart.update();
                document.getElementById('salesPrediction').innerHTML = '<span class="text-red-500">Error loading sales predictions.</span>';
                document.getElementById('salesConfidence').textContent = 'Error';
                console.error('Error loading predictions:', error);
            });

        // Load inventory optimization
        fetch('/api/analytics/inventory-optimization')
            .then(response => response.json())
            .then(data => {
                const inventoryDiv = document.getElementById('inventoryOptimization');
                inventoryDiv.innerHTML = '';
                if (data && data.length > 0) {
                    data.forEach(item => {
                        const div = document.createElement('div');
                        div.className = 'p-3 bg-yellow-50 rounded-lg border border-yellow-200 mb-2';
                        div.innerHTML = `<div class="flex justify-between items-center mb-2"><span class="text-sm font-medium text-yellow-800">${item.product_name}</span><span class="text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded">${item.recommendation.replace('_', ' ')}</span></div><p class="text-xs text-yellow-700">Current: ${item.current_stock}, Optimal: ${item.optimal_stock}, Reorder Point: ${item.reorder_point}, Urgency: ${item.urgency}</p>`;
                        inventoryDiv.appendChild(div);
                    });
                } else {
                    inventoryDiv.innerHTML = '<span class="text-gray-500">No inventory optimization data available.</span>';
                }
            })
            .catch(error => {
                document.getElementById('inventoryOptimization').innerHTML = '<span class="text-red-500">Error loading inventory optimization.</span>';
                console.error('Error loading inventory optimization:', error);
            });

        // Load risk assessment
        fetch('/api/analytics/risk-assessment')
            .then(response => response.json())
            .then(data => {
                const riskDiv = document.getElementById('riskAssessment');
                riskDiv.innerHTML = '';
                if (data) {
                    Object.keys(data).forEach(riskType => {
                        const risk = data[riskType];
                        const div = document.createElement('div');
                        div.className = `flex items-center justify-between p-3 rounded-lg mb-2 ${risk.level === 'high' ? 'bg-red-50' : risk.level === 'medium' ? 'bg-yellow-50' : 'bg-green-50'}`;
                        div.innerHTML = `<div><p class="text-sm font-medium ${risk.level === 'high' ? 'text-red-800' : risk.level === 'medium' ? 'text-yellow-800' : 'text-green-800'}">${riskType.replace('_', ' ').replace(/\b\w/g, l => l.toUpperCase())} Risk</p><p class="text-xs ${risk.level === 'high' ? 'text-red-600' : risk.level === 'medium' ? 'text-yellow-600' : 'text-green-600'}">${risk.factors && risk.factors.length ? risk.factors.join(', ') : ''}</p></div><span class="text-lg font-bold ${risk.level === 'high' ? 'text-red-900' : risk.level === 'medium' ? 'text-yellow-900' : 'text-green-900'}">${risk.level.charAt(0).toUpperCase() + risk.level.slice(1)}</span>`;
                        riskDiv.appendChild(div);
                    });
                } else {
                    riskDiv.innerHTML = '<span class="text-gray-500">No risk assessment data available.</span>';
                }
            })
            .catch(error => {
                document.getElementById('riskAssessment').innerHTML = '<span class="text-red-500">Error loading risk assessment.</span>';
                console.error('Error loading risk assessment:', error);
            });

        // Load customer segmentation data
        fetch('/api/analytics/customer-segmentation')
            .then(response => response.json())
            .then(data => {
                customerSegmentationChart.data.labels = data.labels || [];
                customerSegmentationChart.data.datasets[0].data = data.data || [];
                customerSegmentationChart.update();
            })
            .catch(error => {
                customerSegmentationChart.data.labels = [];
                customerSegmentationChart.data.datasets[0].data = [];
                customerSegmentationChart.update();
                console.error('Error loading customer segmentation data:', error);
            });
    }

    function refreshAllData() {
        loadAnalyticsData();
        
        // Show refresh feedback
        const button = event.target;
        const originalText = button.innerHTML;
        button.innerHTML = '<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg> Refreshed!';
        button.disabled = true;
        
        setTimeout(() => {
            button.innerHTML = originalText;
            button.disabled = false;
        }, 2000);
    }
</script>
@endsection 